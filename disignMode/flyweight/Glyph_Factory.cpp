//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Design Mode
//  @ File Name : Glyph_Factory.cpp
//  @ Date : 2012-3-15
//  @ Author :
//
//


#include "Glyph_Factory.h"

Glyph_Factory::Glyph_Factory()
{
    _char_vec.clear();
}

Charactor* Glyph_Factory::get_charactor ( int key )
{
    int find_flag = 0;
    vector<Charactor*>::iterator iter;

    if ( _char_vec.size() )
        for ( iter = _char_vec.begin();iter != _char_vec.end();iter++ )
        {
            if ( key == ( ( *iter )->get_char() - 'a' ) )
            {
                cout << "Find this charactor in vector" << endl;
                find_flag = 1;
                break;
            }
        }

    if ( find_flag )
    {
        Charactor* tmp = ( Charactor* ) ( *iter );
        return tmp;
    }
    else
    {
        cout << "Create the charactor for no finding it" << endl;
        Charactor* tmp = new Charactor ( 'a' + key );
        _char_vec.push_back ( tmp );
        return tmp;
    }
}

Row* Glyph_Factory::get_row ( int total )
{
    Row* tmp = new Row ( total );
    return tmp;
}

