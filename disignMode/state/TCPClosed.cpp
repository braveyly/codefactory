//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Disign Mode State
//  @ File Name : TCPClosed.cpp
//  @ Date : 2012-3-19
//  @ Author : braveyly
//
//

#include "TCPEstablished.h"
#include "TCPListen.h"
#include "TCPClosed.h"

TCPClosed* TCPClosed::_instance = NULL;


TCPState* TCPClosed::instance() {
	if( _instance )
		return _instance;
	else
		_instance = new TCPClosed();
}

void TCPClosed::active_open(TCPConnection* connect) {
	cout<<"do active_open of TCPClosed"<<endl;
	change_state( connect, TCPEstablished::instance() );	
}

void TCPClosed::passive_open(TCPConnection* connect) {
	cout<<"do passive_open of TCPClosed"<<endl;
	change_state( connect, TCPEstablished::instance() );	
}

void TCPClosed::close(TCPConnection* connect) {
	cout<<"do close of TCPClosed"<<endl;
	change_state( connect, TCPEstablished::instance() );	
}

void TCPClosed::acknowlege(TCPConnection* connect) {
	cout<<"do acknowlege of TCPClosed"<<endl;
	change_state( connect, TCPEstablished::instance() );	
}

void TCPClosed::synchronize(TCPConnection* connect) {
	cout<<"do synchronize of TCPClosed"<<endl;
	change_state( connect, TCPEstablished::instance() );
}
